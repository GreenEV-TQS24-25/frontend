name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: GreenEV-TQS24-25/control-room
          token: ${{ secrets.PRIVATE_TOKEN }}
          submodules: recursive

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
       
      - name: Up containers
        run: docker compose -f compose.prod.yaml up -d --build
      
      - name: Wait for backend startup
        run: sleep 15

      - name: Login and get token
        id: login
        run: |
          RESPONSE=$(curl -s -X POST http://localhost/api/v1/public/user-table/login \
            -H "Content-Type: application/json" \
            -d '{"email": "${{ secrets.APP_EMAIL }}", "password": "${{ secrets.APP_PASSWORD }}"}')
          
          TOKEN=$(echo $RESPONSE | jq -r '.token')
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost/dashboard
            http://localhost/dashboard/map
          uploadArtifacts: true
          temporaryPublicStorage: true
          extraHeaders: '{"Cookie": "token=${{ steps.login.outputs.token }}"}'

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

             core.setOutput("comment", comment);

      - name: Report results
        uses: manrueda/lighthouse-report-action@v1.1.2
        with:
          reports: ".lighthouseci"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment to PR
        if: github.event_name == 'pull_request'
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
